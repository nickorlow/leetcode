/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        ListNode fin = null;

        int remainder = 0;
        while(l1 != null || l2 != null)
        {
            if(l1 == null)
                l1 = new ListNode(0);
            
            if(l2 == null)
                l2 = new ListNode(0);
            
            int sum = l1.val  + l2.val + remainder;
            
            fin = new ListNode(sum%10, fin);
            remainder = (sum-(sum%10))/10;
            l1 = l1.next;
            l2 = l2.next;
        }
        
        if(remainder != 0)
            fin = new ListNode(remainder, fin);
        
        
        return ReverseListNode(fin);
    }
    
    public ListNode ReverseListNode(ListNode node)
    {
        ListNode fin = null;
        while(node != null)
        {
            fin = new ListNode(node.val, fin);
            node = node.next;
        }
        return fin;
    }
}
